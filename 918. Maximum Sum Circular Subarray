class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int n=nums.size();
        int max_straight_SUM=INT_MIN;
        int min_straight_SUM=INT_MAX;
        int array_SUM=0;
        int temp_MAXSUM=0;
        int temp_MINSUM=0;

        for(int i=0;i<n;i++){
            array_SUM+=nums[i];
            temp_MAXSUM+=nums[i];
            max_straight_SUM=max_straight_SUM<temp_MAXSUM?temp_MAXSUM:max_straight_SUM;
            temp_MAXSUM=temp_MAXSUM<0?0:temp_MAXSUM;
            temp_MINSUM+=nums[i];
            min_straight_SUM=min_straight_SUM>temp_MINSUM?temp_MINSUM:min_straight_SUM;
            temp_MINSUM=temp_MINSUM>0?0:temp_MINSUM;
        }
        if(array_SUM==min_straight_SUM)
            return max_straight_SUM;
        return max(max_straight_SUM,(array_SUM-min_straight_SUM));
    }
};
