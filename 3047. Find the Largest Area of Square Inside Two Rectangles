class Solution {
public:
    long long getIntersection(int l1,int l2,int r1,int r2){
        if(l2<=l1 && r2>=r1)
        return r1-l1;
        if(l1<=l2 && r1>=r2)
        return r2-l2;
        if(l2<=r1 && r2>=r1)
        return r1-l2;
        if(l2<=r1 && r2>=l1)
        return r2-l1;
        return 0;
    }
    long long largestSquareArea(vector<vector<int>>& bottomLeft, vector<vector<int>>& topRight) {
        long long ans=0;
        for(int i=0;i<bottomLeft.size();i++){
            for(int j=i+1;j<topRight.size();j++){
                long long x=getIntersection(bottomLeft[i][0],bottomLeft[j][0],topRight[i][0],topRight[j][0]);
                long long y=getIntersection(bottomLeft[i][1],bottomLeft[j][1],topRight[i][1],topRight[j][1]);
                ans=max(ans,min(x,y));
            }
        }
        return ans*ans;
    }
};
