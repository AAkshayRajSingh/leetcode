class Solution {
public:
    int minProcessingTime(vector<int>& processorTime, vector<int>& tasks) {
        sort(processorTime.begin(),processorTime.end());
        sort(tasks.begin(),tasks.end(),[](const int a,const int b){
            return a>b;
        });
        int processorIndex=0;
        int answer=0;
        for(int processingTime:processorTime){
            int currentMax=0;
            int taskCount=0;
            while(processorIndex<tasks.size() && taskCount<4){
                currentMax=max(currentMax,processingTime+tasks[processorIndex]);
                processorIndex++;
                taskCount++;
            }
            answer=max(answer,currentMax);
        }
        return answer;
    }
};
