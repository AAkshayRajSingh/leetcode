#include <bits/stdc++.h>

int LongestSubsetWithZeroSum(vector < int > arr) {

  // Write your code here
  unordered_map<long long,int> mpp;
  int n=arr.size();
  int k=0;
  int sum=0;
  int maxlongest=0;
  for(int i=0;i<n;i++){
    sum+=arr[i];
    if(sum==k){
       maxlongest=max(maxlongest,i+1);
    }
    int rem=sum-k;
    if(mpp.find(rem)!=mpp.end()){
      int length=i-mpp[rem];
      maxlongest=max(maxlongest,length);
    }
    if(mpp.find(sum)==mpp.end())
       {
         mpp[sum]=i;
       } 
  }
return maxlongest;
}
