class Solution {
public:
    unordered_map<char,char> par;
    char parent(char &c){
        if(par[c]==c)return c;
        return par[c]=parent(par[c]);
    }
    void unite(char &a,char &b){
        par[a]=b;
    }
    bool equationsPossible(vector<string>& equations) {
        for(int i=0;i<26;i++)   par['a'+i]=i+'a';
        for(auto &it:equations){
            char a=it[0];
            char b=it[3];
            if(it[1]=='='){
                char parA=parent(a);
                char parB=parent(b);
                if(parA!=parB)
                unite(parA,parB);
            }
        }
        for(auto &it:equations){
            char a=it[0];
            char b=it[3];
            if(it[1]=='!'){
                char parA=parent(a);
                char parB=parent(b);
                if(parA==parB)
                return false;
            }
        }
        return true;
    }
};
