#include<stdio.h>

bool dfs(int node,vector<int> adjL[],int vis[],int dfsVis[]){
  vis[node]=1;
  dfsVis[node]=1;
  for(auto adjNode:adjL[node]){
    if(!vis[adjNode]){
      if (dfs(adjNode, adjL, vis, dfsVis)==true) {
        return true;
      }
    } 
    else if (dfsVis[adjNode]==1) return true;
  }
  dfsVis[node]=0;
  return false;
}


int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
  // Write your code here.
  int vis[n+1]={0};
  int dfsVis[n+1]={0};
  vector<int> adjL[n+1];
  for(auto it:edges){
    adjL[it.first].push_back(it.second);
  }
  for(int i=0;i<n;i++){
    if(!vis[i]){
      if(dfs(i,adjL,vis,dfsVis)) return true;
    }
  }
  return false;
}
