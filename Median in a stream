#include <bits/stdc++.h>
vector<int> findMedian(vector<int> &arr, int n){
	
	// Write your code here 
    if(n==0) return {arr[0]};
	if(n==1) return {arr[0],(arr[0]+arr[1])/2};
    vector<int> ans;
	ans.push_back(arr[0]);
	ans.push_back((arr[0]+arr[1])/2);
	priority_queue<int> maxhp;
	priority_queue<int,vector<int>,greater<int>> minhp;
	maxhp.push(min(arr[0],arr[1]));
	minhp.push(max(arr[0],arr[1]));
	int s1=1;
	int s2=1;
	for(int i=2;i<n;i++){
		if(arr[i]<minhp.top()){
			maxhp.push(arr[i]);
			s1++;
		}
		else{
			minhp.push(arr[i]);
			s2++;
		}
		if(abs(s1-s2)>=2){
			if(s2>s1){
				
				s2--;
				s1++;
				maxhp.push(minhp.top());
				minhp.pop();
			}
			else{
				
				s1--;
				s2++;
				minhp.push(maxhp.top());
				maxhp.pop();
			}
		}
	
	if(s1==s2){
	ans.push_back((minhp.top()+maxhp.top())/2);
	}
	else if(s1>s2){
		ans.push_back(maxhp.top());
		
	}
	else{
		ans.push_back(minhp.top());
	}
	}
	return ans;
}
TC:O(Nlogn)
SC:O(N)
