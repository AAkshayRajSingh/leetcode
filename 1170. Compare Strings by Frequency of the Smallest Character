class Solution {
public:
    int f(string word){
        unordered_map<char,int> mp;
        sort(begin(word),end(word));
        for(auto x:word){
            mp[x]++;
        }
        return mp[word[0]];
    }
    vector<int> numSmallerByFrequency(vector<string>& queries, vector<string>& words) {
        vector<int> ans(queries.size(),0);
        vector<int> res(words.size());
        for(int i=0;i<words.size();i++){
            res[i]=f(words[i]);
        }
        sort(res.begin(),res.end());
        for(int i=0;i<queries.size();i++){
            int x=f(queries[i]);
            int y=upper_bound(res.begin(),res.end(),x)-res.begin();
            ans[i]=res.size()-y;
        }
        return ans;
    }
};
