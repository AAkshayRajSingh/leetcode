class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int> ls;
        int cnt1=0;
        int cnt2=0;
        int el1=INT_MIN;
        int el2=INT_MIN;
        int n=nums.size();
        int mm=(int)(n/3)+1;
        for(int i=0;i<n;i++){
            if(cnt1==0 && nums[i]!=el2){
               cnt1=1;
               el1=nums[i];
            }
            else if (cnt2==0 && nums[i]!=el1){
                 cnt2=1;
               el2=nums[i];
            }
            else if(el1==nums[i] ){
                cnt1++;
            }
            else if(el2==nums[i]){
                cnt2++;
            }
            else{
                cnt1--;
                cnt2--;
            }
        }
      cnt1=0,cnt2=0;
        for(int i=0;i<n;i++){
            if(el1==nums[i] )
            cnt1++;
            if(el2==nums[i] )
            cnt2++;
        }
            if(cnt1>=mm )
            ls.push_back(el1);
            if(cnt2>=mm)
            ls.push_back(el2);
           /* else if(cnt1<mm && cnt2>=mm) 
            ls.push_back(el2);
            else if(cnt1>=mm && cnt2<mm) 
            ls.push_back(el1);
            else ls.clear();*/
        return ls;
    }
};
TC:o(2N)
SC:O(1) Boye Moores Voting Algorithm.
