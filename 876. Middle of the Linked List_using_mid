/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* mid=head;
        int count=0;
        while(head!=NULL){
        count++;
            if(count%2==0)
            mid=mid->next;
        head=head->next;
        }
        return mid;
    }
};
Time Complexity: O(N), As we are traversing the list once.
Auxiliary Space: O(1), As constant extra space is used.
