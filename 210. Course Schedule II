class Solution {
public:
    bool dfs(vector<vector<int> >&graph,vector<int> &colors,vector<int>& res,int v){
        colors[v]=1;
        for(auto it:graph[v]){
            if(colors[it]==1) return true;
            if(colors[it]==0){
                if(dfs(graph,colors,res,it)) return true;
            }
        }
        colors[v]=2;
        res.push_back(v);
        return false;
    }
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        int n=numCourses;
        vector<vector<int>> graph(n);
        for(int i=0;i<prerequisites.size();i++){
            graph[prerequisites[i][0]].push_back(prerequisites[i][1]);
        }
        vector<int> res;
        vector<int>colors(n,0);
        for(int i=0;i<n;i++){
            if(!colors[i]){
                if(dfs(graph,colors,res,i))
                return {};
            }
        }
        return res;
    }
};
