int secondOccur(vector<int>& arr,int size,int key){
    int s=0;
    int e=size-1;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
      if(key==arr[mid])
      {
       ans=mid;
       s=mid+1;
      }
      else if(key>arr[mid]){
          s=mid+1;
      }
      else if(key<arr[mid]){
          e=mid-1;
      }
      mid=s+(e-s)/2;
    }
    return ans;
}
int firstOccur(vector<int>& arr,int size,int key){
    int s=0;
    int e=size-1;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
      if(key==arr[mid])
      {
       ans=mid;
       e=mid-1;
      }
      else if(key>arr[mid]){
          s=mid+1;
      }
      else if(key<arr[mid]){
          e=mid-1;
      }
      mid=s+(e-s)/2;
    }
    return ans;
}

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    // Write your code here
    pair<int,int> p;
    p.first=firstOccur(arr,n,k);
    p.second=secondOccur(arr,n,k);
    return p;
}
