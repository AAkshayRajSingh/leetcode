/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node *temp=head;
        Node *front=head;
        while(temp!=NULL){
            front=temp->next;
            Node *copy=new Node(temp->val);
            copy->next=front;
            temp->next=copy;
            temp=temp->next->next;
        }
        Node *itr=head;
        while(itr!=NULL){
            if(itr->random!=NULL){
                itr->next->random=itr->random->next;
                }
                    itr=itr->next->next;
            
        }
        itr=head;
        Node* psuedo=new Node(0);
        temp=psuedo;
        Node *fast;
        while(itr!=NULL){
           fast=itr->next->next;
           temp->next=itr->next;
           itr->next=fast;
           temp=temp->next;
           itr=fast;
        }
        return psuedo->next;
    }
};
TC:O(3N)==O(N)
SC:O(1)
