class Solution {
public:
bool seen;
    void markX(vector<vector<char>>& board,int i,int j,int r,int c){
        if(i<0||j<0||i>r-1||j>c-1)
        return;
        if(board[i][j]=='X')
        return ;
        board[i][j]='X';
        markX(board,i+1,j,r,c);
        markX(board,i-1,j,r,c);
        markX(board,i,j+1,r,c);
        markX(board,i,j-1,r,c);

    }
    void dfs(vector<vector<char>>& board,int i,int j,int r,int c,vector<vector<bool>> &visited){
        if(i<0||j<0||i>r-1||j>c-1)
        return;
        if(board[i][j]=='X'|| visited[i][j])
        return ;
        if(i<=0||j<=0 ||i>=r-1|| j>=c-1)
         seen=true;
        visited[i][j]=true;
        dfs(board,i,j-1,r,c,visited);
        dfs(board,i-1,j,r,c,visited);
        dfs(board,i+1,j,r,c,visited);
        dfs(board,i,j+1,r,c,visited);
    }
    void solve(vector<vector<char>>& board) {
        int n=board.size();
        int m=board[0].size();
        if(n<=1)
        return ;
        if(m<=1)
        return;
        vector<vector<bool>> visited(n,vector<bool>(m,false));
        for(int i=1;i<n-1;i++){
            for(int j=1;j<m-1;j++){
                if(board[i][j]=='O' && !visited[i][j]){
                    seen=false;
                    dfs(board,i,j,n,m,visited);
                    if(seen==false)
                    markX(board,i,j,n,m);
                    seen=true;
                }
            }
        }
    }
};
