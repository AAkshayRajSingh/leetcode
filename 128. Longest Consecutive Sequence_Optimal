class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        int longest = 0;
        int count = 0;
        
        if (n == 0) {
            return 0;
        }
        
        unordered_set<int> st;
        for (int i = 0; i < n; i++) {
            st.insert(nums[i]);
        }
        
        for (int i = 0; i < n; i++) {
            if (st.find(nums[i] - 1) == st.end()) {
                int currentNum = nums[i];
                count = 1;
                
                while (st.find(currentNum + 1) != st.end()) {
                    currentNum++;
                    count++;
                }
                
                longest = max(longest, count);
            }
        }
        
        return longest;
    }
};
