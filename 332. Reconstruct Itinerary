class Solution {
public:
    vector<string> findItinerary(vector<vector<string>>& tickets) {
        unordered_map<string,multiset<string>> adj;
        stack<string> st;
        for(int i=0;i<tickets.size();i++){
            adj[tickets[i][0]].insert(tickets[i][1]);
        }
        st.push("JFK");
        vector<string> ans;
        while(st.size()!=0){
            auto dst=st.top();
            if(adj[dst].size()==0){
                ans.push_back(dst);
                st.pop();
            }
            else{
                auto sx=adj[dst].begin();
                st.push(*sx);
                adj[dst].erase(sx);
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
