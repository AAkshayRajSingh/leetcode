class Solution {
public:
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int n=edges.size();
        vector<int> ds(n+1);
        for(int i=0;i<=n;i++)
        { 
            ds[i]=i;
        }
        for(vector<int> s:edges){
            int el1=s[0];
            int el2=s[1];
            int p1=find_parent(el1,ds);
            int p2=find_parent(el2,ds);
            if(p1==p2) return s;
            else{
                ds[p2]=p1;
            }
        }
        return {};
    }
    int find_parent(int element,vector<int> &ds){
        if(ds[element]==element) return element;
        return find_parent(ds[element],ds);
    }
};
