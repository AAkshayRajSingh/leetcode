class Solution {
public:
    vector<int> deckRevealedIncreasing(vector<int>& deck) {
      int n=deck.size();
      sort(deck.begin(),deck.end());
      deque<int> dq;
      vector<int> ans(n);
      int chance=0;
      int flip=0;
      for(int i=0;i<n;i++) dq.push_back(i);
      while(dq.size()>0){
          if(flip==0){
              ans[dq.front()]=deck[chance++];
              dq.pop_front();
          }
          else{
              dq.push_back(dq.front());
              dq.pop_front();
          }
          flip^=1;
      }
      return ans;  
    }
};
