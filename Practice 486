class Solution {
public:
    int solve(int i,int j,vector<int> &nums,vector<vector<int>> &dp){
        if(i>j)
        return 0;
        if(i==j)
        return nums[i];
        if(dp[i][j]!=-1) return dp[i][j];
        int take_i=nums[i]+min(solve(i+2,j,nums,dp),solve(i+1,j-1,nums,dp));
        int take_j=nums[j]+min(solve(i+1,j-1,nums,dp),solve(i,j-2,nums,dp));
        return dp[i][j]=max(take_i,take_j);
    }
    bool predictTheWinner(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> dp(23,vector<int>(23,-1));
        int total_score=accumulate(nums.begin(),nums.end(),0);
        int take1=solve(0,n-1,nums,dp);
        int take2=total_score-take1;
        if(take1>=take2)
        return true;
        else
        return false;
    }
};
