class Solution {
public:
    int helper(vector<int> &prices){
        int profit=0;
        for(int i=1;i<prices.size();i++){
            if(prices[i]>prices[i-1]){
                profit+=(prices[i]-prices[i-1]);
            }
        }
        return profit;
    }
    int maxProfit(int k, vector<int>& prices) {
        int minp[k];
        int maxp[k];
        if(k>prices.size()/2) {
            return helper(prices);
        }
        if(k<=0 || prices.size()<=0)return 0;
        for(int i=0;i<k;i++){
            minp[i]=INT_MAX;
            maxp[i]=0;
           }
           for(int i=0;i<prices.size();i++){
               for(int j=0;j<k;j++){
                   minp[j]=min(minp[j],prices[i]-(j>0?maxp[j-1]:0));
                   maxp[j]=max(maxp[j],prices[i]-minp[j]);
               }
           }
           return maxp[k-1];
    }
};
