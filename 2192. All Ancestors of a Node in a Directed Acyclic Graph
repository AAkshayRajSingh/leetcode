class Solution {
public:
    void dfs(int s,vector<vector<int>>& x,vector<bool> &vis){
        vis[s]=true;
        for(int i=0;i<x[s].size();i++){
            if(vis[x[s][i]]) continue;
            dfs(x[s][i],x,vis);
        }
    }
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector<vector<int>> ans(n),x(n);
        for(int i=0;i<edges.size();i++){
            x[edges[i][0]].push_back(edges[i][1]);
        }
        for(int i=0;i<n;i++){
            vector<bool> vis(n,false);
            dfs(i,x,vis);
            for(int j=0;j<n;j++){
                if(i==j)continue;
                if(vis[j]) ans[j].push_back(i);
            }
        }
        return ans;
    }
};
