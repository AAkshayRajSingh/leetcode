class Solution {
public:
    Node* construct(vector<vector<int>>& grid) {
        return _construct(grid,0,0,grid.size());
    }
    Node* _construct(vector<vector<int>> &grid,int i,int j, int w)
    {
        if(allSame(grid,i,j,w))
        return new Node(grid[i][j],true);
        Node* node=new Node(true,false);
        node->topLeft=_construct(grid,i,j,w/2);
        node->topRight=_construct(grid,i,j+w/2,w/2);
        node->bottomLeft=_construct(grid,i+w/2,j,w/2);
        node->bottomRight=_construct(grid,i+w/2,j+w/2,w/2);
        return node;
    }
    bool allSame(vector<vector<int>> &grid,int i,int j,int w){
        for(int x=i;x<i+w;x++){
            for(int y=j;y<j+w;y++){
                if(grid[x][y]!=grid[i][j])
                return false;
            }
        }
        return true;
    }
};
