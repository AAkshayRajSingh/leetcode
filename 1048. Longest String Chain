class Solution {
public:
    bool checkifPossible(string &s1,string &s2){
        if(s1.size()!=s2.size()+1) return false;
        int first=0;
        int second=0;
        while(first < s1.size()){
            if(second < s2.size() && s1[first]==s2[second]){
                first++;
                second++;
            }
            else{
                first++;
            }
        }
        if(s1.size()==first && s2.size()==second) return true;
        return false;
    }
    int longestStrChain(vector<string>& words) {
        vector<int> dp(words.size(),1);
        int maxi=1;
        sort(words.begin(),words.end(),[](const string &s1,const string &s2){
            return s1.size()<s2.size();
        });
        
        for(int i=0;i<words.size();i++){
            for(int j=0;j<i;j++){
                if(checkifPossible(words[i],words[j]) && dp[j]+1>dp[i]){
                    dp[i]=1+dp[j];
                }
            }
            if(dp[i]>maxi)
            maxi=dp[i];
        }
        return maxi;
    }
};
