class Solution {
public:
    int solve(string &s,int start,int end, vector<vector<int>>&dp){
        if(start==end) return 1;
        if(start>end) return 0;
        if(dp[start][end]!=-1) return dp[start][end];
        if(s[start]==s[end]) return(2+solve(s,start+1,end-1,dp));
        int leaveleft=solve(s,start+1,end,dp);
        int leaveright=solve(s,start,end-1,dp);
        return dp[start][end]=max(leaveleft,leaveright);
    }
    int longestPalindromeSubseq(string s) {
        int n=s.size();
        vector<vector<int> >dp(n+1,vector<int>(n+1,-1));
        return solve(s,0,s.size()-1,dp);
    }
};
