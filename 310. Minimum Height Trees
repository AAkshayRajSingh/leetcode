class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        vector<vector<int>> adj(n);
        vector<int>indegrees(n,0),ans;
        for(auto &e:edges){
            adj[e[0]].push_back(e[1]);
            adj[e[1]].push_back(e[0]);
            indegrees[e[0]]++;
            indegrees[e[1]]++;
        }
        queue<int> q;
        for(int i=0;i<n;i++){
            if(indegrees[i]==1)
            q.push(i),indegrees[i]--;
        }
        while(!q.empty()){
            int s=q.size();
            ans.clear();
            for(int i=0;i<s;i++){
                int curr=q.front();
                q.pop();
                ans.push_back(curr);
                for(auto x:adj[curr]){
                    indegrees[x]--;
                    if(indegrees[x]==1)
                    q.push(x);
                }
            }
        }
        if(n==1) ans.push_back(0);
        return ans;
    }
};
