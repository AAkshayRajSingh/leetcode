int calculateValuesLessThanMid(vector<int> &vec, int mid) {
    int l = 0;
    int h = vec.size() - 1;
    while (l <= h) {
        int md = (l + h) >> 1;
        if (vec[md] <= mid)
            l = md + 1;
        else
            h = md - 1;
    }
    return l;
}

int median(vector<vector<int>> &matrix, int m, int n) {
    int low = 1;
    int high = 1e9;
     n=matrix.size();
   m=matrix[0].size();
    while (low <= high) {
        int mid = (low + high) >> 1;
        int cnt = 0;
        for (int i = 0; i < n; i++) {
            cnt += calculateValuesLessThanMid(matrix[i], mid);
        }
        if (cnt <= (n * m) / 2)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return low;
}
