class Solution {
private:
bool dfs(int node,int parent,vector<int>& vis,vector<int> adj[]){
    if(vis[node]==1){
        return true;//loop has been found
    }
    if(vis[node]==2){
        return false;
    }
    vis[node]=1;
    for(auto adjNode:adj[node]){
        
            if(dfs(adjNode,node,vis,adj)) return true;
        
    }
    vis[node]=2;
    return false;
}
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> vis(numCourses,0);
        vector<int> adj[numCourses];
        int n=prerequisites.size();
        for(int i=0;i<n;i++){
          //  adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
                  adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
        }
        for(int i=0;i<numCourses;i++){
            if(vis[i]==0){
                if(dfs(i,-1,vis,adj)) {
                   return false; 
                }
            }
        }
        return true;
    }
};
