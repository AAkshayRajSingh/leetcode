class Solution {
private: 
      void findSubSets(int index,vector<int> &ds,vector<vector<int>> &ans,vector<int> &nums){
         ans.push_back(ds);
          for(int i=index;i<nums.size();i++){
            if(i!=index && nums[i]==nums[i-1]) continue;
            ds.push_back(nums[i]);
            findSubSets(i+1,ds,ans,nums);
            ds.pop_back();
          }
      }
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> ds;
        sort(nums.begin(),nums.end());
        findSubSets(0,ds,ans,nums);
        return ans;
    }
};
 O(k * 2^n).TC
O(2^n * k) SC
