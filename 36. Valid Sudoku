class Solution {
public:
    bool isValid(vector<vector<char>>& board,int sr,int er,int sc,int ec){
                    unordered_set<char> s3;
            for(int i=sr;i<=er;i++){
                for(int j=sc;j<=ec;j++){
                    if(board[i][j]=='.') continue;
                    if(s3.find(board[i][j])!=s3.end())
                    return false;
                    s3.insert(board[i][j]);
                }
            }
            return true;
        }
    bool isValidSudoku(vector<vector<char>>& board) {
        
        for(int row=0;row<9;row++){
            unordered_set<char> s1;
            for(int col=0;col<9;col++){
                if(board[row][col]=='.') continue;
                if(s1.find(board[row][col])!=s1.end())
                return false;
                s1.insert(board[row][col]);
            }
        }
        for(int col=0;col<9;col++){
        unordered_set<char> s2;

            for(int row=0;row<9;row++){
                if(board[row][col]=='.') continue;
               if(s2.find(board[row][col])!=s2.end())
                return false;
                s2.insert(board[row][col]);
            }
        }
        for(int sr=0;sr<9;sr+=3){
            int er=sr+2;
            for(int sc=0;sc<9;sc+=3){
                int ec=sc+2;
                if(!isValid(board,sr,er,sc,ec)){
                    return false;
                }
            }
        }
        return true;
    }
};
